// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model  User{
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String 
  avatar String?
  createdAt DateTime @default(now())
  posts Post[]
  savedPosts SavedPost[]
}

model  Post{
  id Int @id @default(autoincrement())
  title String 
  price Int
  images Image[]
  city String
  address String
  bedroom String
  bathroom String
  latitude String
  longitude String
  type String
  property String
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId Int
  postDetail PostDetail?
  savedPosts SavedPost[]
}


enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
}


model PostDetail {
  id         Int  @id @default(autoincrement())
  desc       String
  utilities  String?
  pet        String?
  furniture  String?
  size       Int?
  post       Post    @relation(fields: [postId], references: [id])
  postId     Int  @unique 
}


model Image {
  id      Int    @id @default(autoincrement())
  url     String
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int    // Foreign key to Post
}


model SavedPost {
  id        Int   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int   @unique 
  postId    Int   @unique 
  createdAt DateTime @default(now())
  @@unique([userId, postId])
}